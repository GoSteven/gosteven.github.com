<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: jquery | Steven You]]></title>
  <link href="http://GoSteven.com/blog/categories/jquery/atom.xml" rel="self"/>
  <link href="http://GoSteven.com/"/>
  <updated>2012-09-02T20:35:02+10:00</updated>
  <id>http://GoSteven.com/</id>
  <author>
    <name><![CDATA[Steven You]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Multiple sliders on one page - jquery]]></title>
    <link href="http://GoSteven.com/blog/2012/08/29/multiple-sliders-on-one-page-jquery/"/>
    <updated>2012-08-29T21:52:00+10:00</updated>
    <id>http://GoSteven.com/blog/2012/08/29/multiple-sliders-on-one-page-jquery</id>
    <content type="html"><![CDATA[<p>I was trying to put several sliders on the same page. There are actually lots of tutorials can tell you how to do that, like <a href="http://demo.tutorialzine.com/2011/12/what-you-need-to-know-html5-range-input/slider-jqueryui.html">this one</a>.</p>

<p>However, I want multiple, like this:</p>

<p><img src="/downloads/20120829_slider.png" title="[Slider [Multiple slider on one page]]" ></p>

<!--more-->


<p>In the sample code, the javascript looks like this:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">$</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="kd">var</span> <span class="nx">currentValue</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#currentValue&#39;</span><span class="p">);</span>
</span><span class='line'><span class="nx">$</span><span class="p">(</span><span class="s2">&quot;#slider&quot;</span><span class="p">).</span><span class="nx">slider</span><span class="p">({</span>
</span><span class='line'>    <span class="nx">max</span><span class="o">:</span> <span class="mi">500</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">min</span><span class="o">:</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">slide</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">event</span><span class="p">,</span> <span class="nx">ui</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">currentValue</span><span class="p">.</span><span class="nx">html</span><span class="p">(</span><span class="nx">ui</span><span class="p">.</span><span class="nx">value</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>They find the html element by id. But when I generate sliders in a loop, it would be nasty to assign ids to each slider:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">&quot;search_bar&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    {% for pp in p %}
</span><span class='line'>    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;contSlider&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>         <span class="nt">&lt;h4&gt;</span>{{ pp.field_name }}<span class="nt">&lt;/h4&gt;</span>
</span><span class='line'>         <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;slider&quot;</span><span class="nt">&gt;&lt;/div&gt;</span>
</span><span class='line'>         <span class="nt">&lt;p</span> <span class="na">class=</span><span class="s">&quot;note&quot;</span><span class="nt">&gt;</span>Current value: <span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">&quot;currentValue&quot;</span><span class="nt">&gt;</span>0<span class="nt">&lt;/span&gt;&lt;/p&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>    {% endfor %}
</span><span class='line'><span class="nt">&lt;/div&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Fortunately  <code>each()</code> in jquery is very handy, we can get all the divs, and loop through them:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">$</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;.contSlider&#39;</span><span class="p">).</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">obj</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">currentValue</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="nx">obj</span><span class="p">).</span><span class="nx">find</span><span class="p">(</span><span class="s1">&#39;.currentValue&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">slider</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="nx">obj</span><span class="p">).</span><span class="nx">find</span><span class="p">(</span><span class="s1">&#39;.slider&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="nx">slider</span><span class="p">.</span><span class="nx">slider</span><span class="p">({</span>
</span><span class='line'>        <span class="nx">max</span><span class="o">:</span> <span class="mi">500</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">min</span><span class="o">:</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">slide</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">event</span><span class="p">,</span> <span class="nx">ui</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="nx">currentValue</span><span class="p">.</span><span class="nx">html</span><span class="p">(</span><span class="nx">ui</span><span class="p">.</span><span class="nx">value</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>When using <code>each()</code> sometime you could encounter error like:</p>

<blockquote><p> "Uncaught TypeError: Object #<HTMLDivElement> has no method 'find'"</p></blockquote>

<p>This is because the <code>obj</code> in <code>$('.contSlider').each(function(i,obj) {</code> refers to a DOM object rather than a jquery object.</p>

<p>Add <code>$()</code> to make it a jquery object like this: <code>$(obj).find('.currentValue')</code>.</p>

<p>In the end, what I got is:</p>

<p><link rel="stylesheet" href="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8.16/themes/base/jquery-ui.css" /></p>

<div class="contSlider">
     <h4>slider 1</h4>
     <div class="slider"></div>
     <p class="note">Current value: <span class="currentValue">0</span></p>
</div>


<div class="contSlider">
     <h4>slider 2</h4>
     <div class="slider"></div>
     <p class="note">Current value: <span class="currentValue">0</span></p>
</div>


<script src="http://code.jquery.com/jquery-1.7.1.min.js"></script>


<script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.8.16/jquery-ui.min.js"></script>


<script >
    $(function(){
        $('.contSlider').each(function(i,obj) {
            var currentValue = $(obj).find('.currentValue')
            var slider = $(obj).find('.slider')
            slider.slider({
                max: 500,
                min: 0,
                slide: function(event, ui) {
                    currentValue.html(ui.value);
                }
            });
        });
    });
</script>


<p>--EOF--</p>
]]></content>
  </entry>
  
</feed>
